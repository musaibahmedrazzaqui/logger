input {
  udp {
    port => 6515
    tags => "palo_alto"
  }
}



filter {
    mutate { remove_field => [ "client" ] }
    mutate { remove_field => [ "init_source" ] }
    #mutate { add_field => { "init_source" => "neta_pf_sense" }}
    #mutate { add_field => { "client" => "mountbatten" }}
    mutate { add_field => { "[organization][name]" => "mountbatten" }}
    mutate { add_field => { "[log][sender][type]" => "neta" }}
    mutate { replace => { "[log][sender][name]" => "palo_alto"}}
  
  ruby {
    code => '
      value = event.get("message").split(/,(?!(?=[^\"]*\"[^\"]*(?:\"[^\"]*\"[^\"]*)*$))/);
      event.set("split_input", value);
      lastIndex = event.get("split_input").length - 1;
      # event.set("system_observer_name", event.get("split_input")[lastIndex]);
    '  
  }

  grok { 
    match => {"message" => '%{SYSLOGTIMESTAMP} %{DATA:[agent][name]} 1,'} 
    tag_on_failure => ["parse_agent.name_failed"] 
  }

  if [message] =~ 'GLOBALPROTECT' { 
    if [split_input][2] != "" { mutate { add_field => {'observer.serial_number' => "%{[split_input][2]}" } } }  #pa_serial_number
    if [split_input][3] != "" { mutate { add_field => {"[log][type]" => "%{[split_input][3]}"} } }  #event_type_id
    if [split_input][8] != "" { mutate { add_field => {"[log][subtype]" => "%{[split_input][8]}"} } }  #event_subtype_id
    if [split_input][12] != "" { mutate { add_field => {"source.user.name" => "%{[split_input][12]}"} } }  #init_usr_name
    if [split_input][14] != "" { mutate { add_field => {"observer.name" => "%{[split_input][14]}"} } }  #device_name
    if [split_input][15] != "" { mutate { add_field => {"source.nat.ip" => "%{[split_input][15]}"} } }  #init_host_nat_ip
    if [split_input][17] != "" { mutate { add_field => {"source.ip" => "%{[split_input][17]}"} } }  #init_host_ip
    if [split_input][21] != "" { mutate { add_field => {"observer.version" => "%{[split_input][21]}"} } }  #device_version
    if [split_input][22] != "" { mutate { add_field => {"observer.os.name" => "%{[split_input][22]}"} } }  #init_host_os
    if [split_input][23] != "" { mutate { add_field => {"observer.os.full" => "%{[split_input][23]}"} } }  #init_host_os_version
    if [split_input][27] != "" { mutate { add_field => {"log.message" => "%{[split_input][27]}"} } }  #event_message
  }

  if [message] =~ 'TRAFFIC' { 
    if [split_input][2] != "" { mutate { add_field => {"observer.serial_number" =>  "%{[split_input][2]}"} } }  #pa_serial_number
    if [split_input][3] != "" { mutate { add_field => {"[log][type]" =>  "%{[split_input][3]}"} } }  #event_type_id
    if [split_input][4] != "" { mutate { add_field => {"[log][subtype]" =>  "%{[split_input][4]}"} } }  #event_subtype_id
    if [split_input][7] != "" { mutate { add_field => {"source.ip" =>  "%{[split_input][7]}"} } }  #init_host_ip
    if [split_input][8] != "" { mutate { add_field => {"destination.ip" =>  "%{[split_input][8]}"} } }  #target_host_ip
    if [split_input][9] != "" { mutate { add_field => {"source.nat.ip" =>  "%{[split_input][9]}"} } }  #init_host_nat_ip
    if [split_input][10] != "" { mutate { add_field => {"destination.nat.ip" =>  "%{[split_input][10]}"} } }  #target_host_nat_ip
    if [split_input][11] != "" { mutate { add_field => {"[rule][name]" =>  "%{[split_input][11]}"} } }  #rule_name
    if [split_input][12] != "" { mutate { add_field => {"source.user.name" =>  "%{[split_input][12]}"} } }  #init_usr_name
    if [split_input][13] != "" { mutate { add_field => {"destination.user.name" =>  "%{[split_input][13]}"} } }  #target_usr_name
    if [split_input][14] != "" { mutate { add_field => {"application.name" =>  "%{[split_input][14]}"} } }  #app_name
    if [split_input][15] != "" { mutate { add_field => {"palo_alto.virtual_sys" =>  "%{[split_input][15]}"} } }  #pa_virtual_system
    if [split_input][16] != "" { mutate { add_field => {"observer.ingress.zone" =>  "%{[split_input][16]}"} } }  #init_host_zone
    if [split_input][17] != "" { mutate { add_field => {"observer.egress.zone" =>  "%{[split_input][17]}"} } }  #target_host_zone
    if [split_input][18] != "" { mutate { add_field => {"observer.ingress.interface.name" =>  "%{[split_input][18]}"} } }  #init_host_if
    if [split_input][19] != "" { mutate { add_field => {"observer.egress.interface.name" =>  "%{[split_input][19]}"} } }  #target_host_if
    if [split_input][22] != "" { mutate { add_field => {"labels.session.id" =>  "%{[split_input][22]}"} } }  #session_id
    # if [split_input][23] != "" { mutate { add_field => {"labels.session.repeat.count" =>  "%{[split_input][23]}"} } }  #session_repeat_count
    if [split_input][24] != "" { mutate { add_field => {"source.port" =>  "%{[split_input][24]}"} } }  #init_host_port
    if [split_input][25] != "" { mutate { add_field => {"destination.port" =>  "%{[split_input][25]}"} } }  #target_host_port
    if [split_input][26] != "" { mutate { add_field => {"source.nat.port" =>  "%{[split_input][26]}"} } }  #init_host_nat_port
    if [split_input][27] != "" { mutate { add_field => {"destination.nat.port" =>  "%{[split_input][27]}"} } }  #target_host_nat_port
    if [split_input][29] != "" { mutate { add_field => {"network.protocol" =>  "%{[split_input][29]}"} } }  #app_proto_name
    if [split_input][30] != "" { mutate { add_field => {"[log][action]" =>  "%{[split_input][30]}"} } }  #action
    if [split_input][31] and [split_input][31] =~ /^[0-9]*$/ { mutate { add_field => {"[network][bytes]" =>  "%{[split_input][31]}"} } }  #network_bytes
    if [split_input][32] and [split_input][32] =~ /^[0-9]*$/ { mutate { add_field => {"[source][bytes]" =>  "%{[split_input][32]}"} } }  #source_bytes
    if [split_input][33] and [split_input][33] =~ /^[0-9]*$/ { mutate { add_field => {"[destination][bytes]" =>  "%{[split_input][33]}"} } }  #destination_bytes
    if [split_input][34] and [split_input][34] =~ /^[0-9]*$/ { mutate { add_field => {"[network][packets]" =>  "%{[split_input][34]}"} } }  #network_packets
    if [split_input][37] != "" { mutate { add_field => {"[log][category]" =>  "%{[split_input][37]}"} } }  #cat
    if [split_input][52] != "" { mutate { add_field => {"observer.name" =>  "%{[split_input][52]}"} } }  #device_name
  }

  if [message] =~ 'THREAT' { 
    if [split_input][2] != "" { mutate { add_field => {"observer.serial_number" =>  "%{[split_input][2]}"} } }  #pa_serial_number
    if [split_input][3] != "" { mutate { add_field => {"[log][type]" =>  "%{[split_input][3]}"} } }  #event_type_id
    if [split_input][4] != "" { mutate { add_field => {"[log][subtype]" =>  "%{[split_input][4]}"} } }  #event_subtype_id
    if [split_input][7] != "" { mutate { add_field => {"source.ip" =>  "%{[split_input][7]}"} } }  #init_host_ip
    if [split_input][8] != "" { mutate { add_field => {"destination.ip" =>  "%{[split_input][8]}"} } }  #target_host_ip
    if [split_input][9] != "" { mutate { add_field => {"source.nat.ip" =>  "%{[split_input][9]}"} } }  #init_host_nat_ip
    if [split_input][10] != "" { mutate { add_field => {"destination.nat.ip" =>  "%{[split_input][10]}"} } }  #target_host_nat_ip
    if [split_input][11] != "" { mutate { add_field => {"[rule][name]" =>  "%{[split_input][11]}"} } }  #rule_name
    if [split_input][12] != "" { mutate { add_field => {"source.user.name" =>  "%{[split_input][12]}"} } }  #init_usr_name
    if [split_input][13] != "" { mutate { add_field => {"destination.user.name" =>  "%{[split_input][13]}"} } }  #target_usr_name
    if [split_input][14] != "" { mutate { add_field => {"application.name" =>  "%{[split_input][14]}"} } }  #app_name
    if [split_input][15] != "" { mutate { add_field => {"palo_alto.virtual_sys" =>  "%{[split_input][15]}"} } }  #pa_virtual_system
    if [split_input][16] != "" { mutate { add_field => {"observer.ingress.zone" =>  "%{[split_input][16]}"} } }  #init_host_zone
    if [split_input][17] != "" { mutate { add_field => {"observer.egress.zone" =>  "%{[split_input][17]}"} } }  #target_host_zone
    if [split_input][18] != "" { mutate { add_field => {"observer.ingress.interface.name" =>  "%{[split_input][18]}"} } }  #init_host_if
    if [split_input][19] != "" { mutate { add_field => {"observer.egress.interface.name" =>  "%{[split_input][19]}"} } }  #target_host_if
    if [split_input][22] != "" { mutate { add_field => {"labels.session.id" =>  "%{[split_input][22]}"} } }  #session_id
    # if [split_input][23] != "" { mutate { add_field => {"labels.session.repeat.count" =>  "%{[split_input][23]}"} } }  #session_repeat_count
    if [split_input][24] != "" { mutate { add_field => {"source.port" =>  "%{[split_input][24]}"} } }  #init_host_port
    if [split_input][25] != "" { mutate { add_field => {"destination.port" =>  "%{[split_input][25]}"} } }  #target_host_port
    if [split_input][26] != "" { mutate { add_field => {"source.nat.port" =>  "%{[split_input][26]}"} } }  #init_host_nat_port
    if [split_input][27] != "" { mutate { add_field => {"destination.nat.port" =>  "%{[split_input][27]}"} } }  #target_host_nat_port
    if [split_input][29] != "" { mutate { add_field => {"network.protocol" =>  "%{[split_input][29]}"} } }  #app_proto_name
    if [split_input][30] != "" { mutate { add_field => {"[log][action]" =>  "%{[split_input][30]}"} } }  #action
    if [split_input][31] != "" and [split_input][31] != '""' { mutate { add_field => {"[file][name]" => "%{[split_input][31]}"} } }  #file_name
    # add_field => {"threat.indicator.file.name" => "%{[split_input][31]}"}  #file_name
    if [split_input][32] != "" { mutate { add_field => {"[threat][name]" => "%{[split_input][32]}"} } }  #threat_id
    if [split_input][33] != "" { mutate { add_field => {"[log][category]" => "%{[split_input][33]}"} } }  #cat
    if [split_input][34] != "" { mutate { add_field => {"[log][severity][name]" => "%{[split_input][34]}"} } }  #alarm_sev //// event.severity
    if [split_input][35] != "" { mutate { add_field => {"network.direction" => "%{[split_input][35]}"} } }  #threat_direction
    if [split_input][59] != "" { mutate { add_field => {"observer.name" => "%{[split_input][59]}"} } }  #device_name
    if [split_input][70] != "" { mutate { add_field => {"threat.category" => "%{[split_input][70]}"} } }  #threat_cat
    # add_field => {"threat.id" => "%{[split_input][73]}"}
    # add_field => {"threat.category" => "%{[split_input][75]}"}
    if [threat][name] == "9999" {
      mutate { copy => { "threat_name" => "threat_id"}}
      mutate { replace => { "threat_name" => "URL-filtering"}}
    } else if [threat][name] {
      grok { 
        match => { "[threat][name]" => '%{GREEDYDATA:[threat][name]}\(\s*%{GREEDYDATA:[threat][id]}\s*\)' } 
        overwrite => ["[threat][name]"]
        tag_on_failure => ["parse_threat.id_failed"] 
      }
    }
  }

  if [message] =~ 'USERID' { 
    if [split_input][2] != "" { mutate { add_field => {"observer.serial_number" =>  "%{[split_input][2]}"} } }  #pa_serial_number
    if [split_input][3] != "" { mutate { add_field => {"[log][type]" =>  "%{[split_input][3]}"} } }  #event_type_id
    if [split_input][4] != "" { mutate { add_field => {"[log][subtype]" =>  "%{[split_input][4]}"} } }  #event_subtype_id
    if [split_input][7] != "" { mutate { add_field => {"palo_alto.virtual_sys" =>  "%{[split_input][7]}"}  } }  #
    if [split_input][8] != "" { mutate { add_field => {"source.ip" => "%{[split_input][8]}"} } }  #init_host_ip
    if [split_input][9] != "" { mutate { add_field => {"source.user.name" => "%{[split_input][9]}"} } }  #init_usr_name
    if [split_input][10] != "" { mutate { add_field => {"palo_alto.datasource_name" => "%{[split_input][10]}"} } }  #pa_datasource_name
    # if [split_input][12] != "" { mutate { add_field => {"labels.session.repeat.count" =>  "%{[split_input][12]}"}  } }  #
    if [split_input][14] != "" { mutate { add_field => {"source.port" => "%{[split_input][14]}"} } }  #init_host_port
    if [split_input][15] != "" { mutate { add_field => {"destination.port" => "%{[split_input][15]}"} } }  #target_host_port
    if [split_input][16] != "" { mutate { add_field => {"palo_alto.datasource" => "%{[split_input][16]}"} } }  #pa_datasource
    if [split_input][17] != "" { mutate { add_field => {"palo_alto.datasource_type" => "%{[split_input][17]}"} } }  #pa_datasource_type
    if [split_input][25] != "" { mutate { add_field => {"observer.name" => "%{[split_input][25]}"} } }  #device_name
  }

  if [message] =~ 'SYSTEM' { 
    if [split_input][2] != "" { mutate { add_field => {"observer.serial_number" =>  "%{[split_input][2]}"} } }  #pa_serial_number
    if [split_input][3] != "" { mutate { add_field => {"[log][type]" =>  "%{[split_input][3]}"} } }  #event_type_id
    if [split_input][4] != "" { mutate { add_field => {"[log][subtype]" =>  "%{[split_input][4]}"} } }  #event_subtype_id
    if [split_input][8] != "" { mutate { add_field => {"palo_alto.event_id" => "%{[split_input][8]}"} } }  #event_msg_type_id
    if [split_input][9] != "" { mutate { add_field => {"palo_alto.object" => "%{[split_input][9]}"} } }  #event_msg_detail
    if [split_input][12] != "" { mutate { add_field => {"palo_alto.module" => "%{[split_input][12]}"} } }  #pa_module
    if [split_input][13] != "" { mutate { add_field => {"[log][severity][name]" => "%{[split_input][13]}"} } }  #alarm_sev
    if [split_input][14] != "" { mutate { add_field => {"log.message" => "%{[split_input][14]}"} } }  #event_msg
    # mutate { add_field => { "observer.name" => "%{[system_observer_name]}" } }  #
  }

  if [message] =~ 'HIPMATCH' { 
    if [split_input][2] != "" { mutate { add_field => {"observer.serial_number" =>  "%{[split_input][2]}"} } }  #pa_serial_number
    if [split_input][3] != "" { mutate { add_field => {"[log][type]" =>  "%{[split_input][3]}"} } }  #event_type_id
    if [split_input][4] != "" { mutate { add_field => {"[log][subtype]" =>  "%{[split_input][4]}"} } }  #event_subtype_id
    if [split_input][7] != "" { mutate { add_field => {"source.user.name" => "%{[split_input][7]}"} } }  #init_usr_name
    if [split_input][9] != "" { mutate { add_field => {"source.address" => "%{[split_input][9]}"} } }  #init_host_name
    if [split_input][10] != "" { mutate { add_field => {"observer.os.name" => "%{[split_input][10]}"} } }  #init_host_os
    if [split_input][11] != "" { mutate { add_field => {"source.ip" => "%{[split_input][11]}"} } }  #init_host_ip
    if [split_input][12] != "" { mutate { add_field => {"palo_alto.hip_name" => "%{[split_input][12]}"} } }  #event_msg
    if [split_input][24] != "" { mutate { add_field => {"observer.name" => "%{[split_input][24]}"} } }  #device_name
    if [split_input][28] != "" { mutate { add_field => {"observer.serial_number" => "%{[split_input][28]}"} } }  #device_id
  }

  if [message] =~ 'CONFIG' { 
    if [split_input][2] != "" { mutate { add_field => {"observer.serial_number" =>  "%{[split_input][2]}"} } }  #pa_serial_number
    if [split_input][3] != "" { mutate { add_field => {"[log][type]" =>  "%{[split_input][3]}"} } }  #event_type_id
    if [split_input][4] != "" { mutate { add_field => {"[log][subtype]" =>  "%{[split_input][4]}"} } }  #event_subtype_id
    if [split_input][7] != "" { mutate { add_field => {"source.address" => "%{[split_input][7]}"} } }  #init_host_name
    if [split_input][9] != "" { mutate { add_field => {"process.command_line" => "%{[split_input][9]}"} } }  #cmd
    if [split_input][10] != "" { mutate { add_field => {"source.user.name" => "%{[split_input][10]}"} } }  #init_usr_name
    if [split_input][11] != "" { mutate { add_field => {"authentication.client" => "%{[split_input][11]}"} } }  #auth_client
    if [split_input][12] != "" { mutate { add_field => {"log.outcome" => "%{[split_input][12]}"} } }  #outcome
    if [split_input][21] != "" { mutate { add_field => {"observer.name" => "%{[split_input][21]}"} } }  #device_name
  }

  if [message] =~ 'globalprotect' { 
      grok {
        match => {"message" => 'User name: ?(?<source.user.name>[^(\s|,|")]*)"?'}
        match => {"message" => 'Client version: ?(?<observer.version>[^(\s|,|")]*)"?'}
        match => {"message" => 'Device name: ?(?<observer.name>[^(\s|,|")]*)"?'}
        match => {"message" => 'Client OS version: ?(?<observer.os.full>[^(\s|,|")]*)"?'}
        match => {"message" => 'VPN type: ?(?<palo_alto.vpn_type>[^(\s|,|")]*)"?'}
        match => {"message" => 'Reason: ?(?<[event][reason]>[^(\s|,|")]*)"?'}
        match => {"message" => 'Private IP: ?(?<source.ip>[^(\s|,|")]*)"?.,'}
        tag_on_failure => ["parse_globalprotect_failed"] 
      }
  }

  #Extract target_uri_url from file_name and remove file_name for url events.
  if [log][subtype] =~ "url" and [file][name] {
    mutate {
      add_field => {"url.original" => "%{[file][name]}"}
      remove_field => ["[file][name]"]
    }
  }

  #[PARSER] Palo Alto - Copy file name if vulnerability or spyware event
  if [log][subtype] =~ "spyware" or [log][subtype] =~ "vulnerability"{
    if [file][name] {
      mutate { add_field => {"url.original" => "%{[file][name]}"} }
    }
  }

  #Remove double quotes from fields
  if [url.original] =~ /"(.*)"/ { grok { match => { "url.original" => '"%{NOTSPACE:url.original}"' } tag_on_failure => ["parse_url.original_failed"]  overwrite => ["url.original"] } }
  if [file][name] =~ /"(.*)"/ { grok { match => { "[file][name]" => '"%{NOTSPACE:[file][name]}"' } tag_on_failure => ["parse_file.name_failed"]  overwrite => ["[file][name]"] } }
  if [log.message] =~ /"(.*)"/ { grok { match => { "log.message" => '"%{DATA:log.message}"' } tag_on_failure => ["parse_log.message_failed"]  overwrite => ["log.message"] } }

  #[PARSER] Palo Alto - System VPN source-target parser
  if [log.subtype] =~ "vpn" {
    grok { match => { "log.message" => '%{DATA}\. %{DATA}\: %{IP:source.ip}\[%{INT}\]\-%{IP:destination.ip}\[%{INT}\]' } tag_on_failure => ["parse_vpn_failed"] }
  }

  mutate {remove_field => ["split_input"]}
}



output {
  pipeline {
    send_to => normalization  }
}	
